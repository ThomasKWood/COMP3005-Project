-- DROP TABLES
DROP TABLE IF EXISTS exerciseAdded;
DROP TABLE IF EXISTS exercise;
DROP TABLE IF EXISTS transaction;
DROP TABLE IF EXISTS "user";

-- CREATE TABLES
-- Create User table
CREATE TABLE "user" (
    id SERIAL PRIMARY KEY,
    email VARCHAR(255) NOT NULL,
    password CHAR(64) NOT NULL,
    fName VARCHAR(255) NOT NULL,
    lName VARCHAR(255) NOT NULL,
    admin BOOLEAN DEFAULT FALSE,
    joinDate DATE DEFAULT CURRENT_DATE,
    accountInfo JSON,
    goals JSON,
    points INT DEFAULT 0
);

CREATE TABLE exercise (
    id SERIAL PRIMARY KEY,
    name VARCHAR(255),
    info JSON,
    link VARCHAR(255)
);

CREATE TABLE exerciseAdded (
    eid INT,
    uid INT,
    lastDone DATE,
    PRIMARY KEY (eid, uid),
    FOREIGN KEY (eid) REFERENCES exercise(id),
    FOREIGN KEY (uid) REFERENCES public.user(id)
);

CREATE TABLE "transaction" (
    id SERIAL PRIMARY KEY,
    uid INT REFERENCES public.user(id),
    date DATE,
    type VARCHAR(255), 
    amount INT,
    points INT,
    paidByPoints BOOLEAN,
    paid BOOLEAN
);

-- INSERT DATA
INSERT INTO "user" (email, password, fName, lName, admin, accountInfo, goals, points)
VALUES
    ('user1@example.com', 'password1hash', 'John', 'Doe', false, '{"height": 175,"weight": 70,"dateOfBirth": "1990-01-15"}', '{"goals": [{"name": "Goal 1","value": 100,"completed": true},{"name": "Goal 2","value": 200,"completed": false},{"name": "Goal 3","value": 150,"completed": true}]}', 100),
    ('user2@example.com', 'password2hash', 'Jane', 'Smith', false, '{"height": 180, "weight": 75, "dateOfBirth": "1995-05-20"}', '{"goals": [{"name": "New Year Resolution", "value": 50, "completed": false}, {"name": "Fitness Milestone", "value": 300, "completed": true}, {"name": "Personal Achievement", "value": 120, "completed": false}]}', 50);
INSERT INTO "user" (email, password, fName, lName)
    VALUES ('user3@example.com', 'password3hash', 'Bob', 'Johnson');

INSERT INTO exercise (id, name, info, link) 
VALUES
    (1, 'Barbell Close Grip Press', '{"steps": ["Steps :", "1.) Start by sitting up straight on the end of a flat bench with feet in front of you, while holding a weighted barbell on your knees.", "2.) Elevate the bar overhead and this will be your starting position.", "3.) Slowly lower the bar behind your head, until you feel a stretch, squeeze your triceps, and hold for a count.", "4.) Return back to the starting position."], "muscles": ["Triceps"]}', 'https://cdn.jefit.com/assets/img/exercises/gifs/1165.gif'),
    (2, 'Barbell Clean Deadlift', '{"steps": ["Steps :", "1.) To begin this exercise; start off with a weighted barbell right in front of your shins with an overhand grip.", "2.) Bend down at the knees with your back straight, chest up, head facing forward and pull up on the barbell with the driving force from your heels.", "3.) As you lift the barbell up, keep your back straight and pull up.", "4.) When the barbell crosses your knees, lift up with your torso until the bar has reached your hips and your knees are fully extended.", "5.) Repeat this exercise for as many repetitions as needed"], "muscles": ["Back", "Glutes", "Upper Legs"]}', 'https://cdn.jefit.com/assets/img/exercises/gifs/470.gif'),
    (3, 'Barbell Ab Rollout (Kneeling)', '{"steps": ["Steps :", "1.) Start off placing a barbell on the floor in front of you and kneeling in front of the bar, gripping it with a shoulder-width overhand grip.", "2.) With a slow controlled motion, roll the bar out so that your back is straight, bend your knees and keep your feet off the floor.", "3.) Keep your arms straight throughout the exercise.", "4.) Roll back up bring the bar under your shoulders and return to the starting position.", "5.) Repeat for as many reps and sets as desired."], "muscles": ["Core", "Shoulders", "Back"]}', 'https://cdn.jefit.com/assets/img/exercises/gifs/294.gif');

INSERT INTO exerciseAdded (eid, uid, lastDone)
VALUES (1, 1, '2023-10-15'),
       (1, 2, '2023-09-20'),
       (1, 3, '2023-08-05'),
       (2, 3, '2023-07-10'),
       (2, 2, '2023-06-25');

INSERT INTO public."transaction" (id, uid, date, type, amount, points, paidByPoints, paid)
VALUES 
    (1, 1, '2023-10-15', 'Purchase', 50, 0, FALSE, TRUE),
    (2, 1, '2023-09-20', 'Refund', -10, 0, TRUE, TRUE),
    (3, 1, '2023-08-05', 'Purchase', 75, 10, FALSE, FALSE),
    (4, 2, '2023-07-10', 'Purchase', 30, 0, TRUE, TRUE),
    (5, 2, '2023-06-25', 'Refund', -20, 0, FALSE, TRUE),
    (6, 3, '2023-06-15', 'Purchase', 60, 5, FALSE, TRUE);